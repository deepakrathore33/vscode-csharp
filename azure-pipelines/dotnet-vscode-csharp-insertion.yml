trigger: none
pr: none

parameters:
  - name: targetBranch
    displayName: Target Branch for PR
    type: string
    default: main

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
  pipelines:
    - pipeline: officialBuildCI
      source: dotnet-roslyn-official
      project: internal
      branch: main
      trigger: none

variables:
  - name: RoslynEndSHA
    value: $(resources.pipeline.officialBuildCI.sourceCommit)
  - name: RoslynBuildNumber
    value: $(resources.pipeline.officialBuildCI.runName)
  - name: RoslynBuildId
    value: $(resources.pipeline.officialBuildCI.runID)

extends:
  template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: AzurePipelines-EO
      image: AzurePipelinesUbuntu22.04compliant
      os: linux
    stages:
      - stage: BumpRoslyn
        displayName: Bump Roslyn Version
        jobs:
          - job: ProcessBump
            displayName: Process Roslyn Bump
            pool:
              name: AzurePipelines-EO
              image: AzurePipelinesUbuntu22.04compliant
              os: linux
            steps:
              - checkout: self
                persistCredentials: true

              - task: UseDotNet@2
                displayName: Install .NET SDK
                inputs:
                  version: 9.0.x

              - task: NodeTool@0
                displayName: Install Node.js
                inputs:
                  versionSpec: '20.x'

              - task: DownloadPipelineArtifact@2
                displayName: Download Asset Manifests
                inputs:
                  source: specific
                  project: internal
                  pipeline: dotnet-roslyn-official
                  runVersion: specific
                  runId: $(RoslynBuildId)
                  artifact: AssetManifests
                  path: $(Pipeline.Workspace)/AssetManifests

              - pwsh: |
                  npm ci
                  npm install
                  npm install -g gulp
                  gulp installDependencies
                displayName: 'Install npm dependencies and gulp'

              - script: |
                  echo "Cloning Roslyn repository..."
                  git clone --no-tags --filter=blob:none --depth=500 https://github.com/dotnet/roslyn.git $(Pipeline.Workspace)/roslyn
                displayName: 'Clone Roslyn repository'

              - script: |
                  echo "Installing roslyn-tools..."
                  dotnet tool install -g Microsoft.RoslynTools --prerelease --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json
                  echo "Verifying roslyn-tools installation..."
                  dotnet tool list -g
                  roslyn-tools --help
                displayName: 'Install roslyn-tools CLI'

              - task: Npm@1
                displayName: Run Roslyn insertion
                env:
                  GITHUB_TOKEN: $(System.AccessToken)
                  GitHubPAT: $(System.AccessToken)
                inputs:
                  command: custom
                  customCommand: 'run gulp -- insertion:roslyn --assetManifestPath=$(Pipeline.Workspace)/AssetManifests --roslynRepoPath=$(Pipeline.Workspace)/roslyn --roslynEndSHA=$(RoslynEndSHA) --roslynBuildNumber=$(RoslynBuildNumber) --roslynBuildId=$(RoslynBuildId) --targetBranch=${{ parameters.targetBranch }} --githubPAT=$(System.AccessToken) --dryRun=false'


